<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        MyBatis核心配置文件中的标签必须按照指定的顺序配置：
            properties?,settings?,typeAliases?,typeHandlers?,
            objectFactory?,objectWrapperFactory?,reflectorFactory?,
            plugins?,environments?,databaseIdProvider?,mappers?
    -->

    <!--引入properties文件，此后就可以在当前文件中使用${key}的方式访问value-->
    <properties resource="jdbc.properties"/>

    <!--
        typeAliases：设置类型别名，即为某个具体类型设置别名，
        在mybatis的范围中可以使用别名表示一个具体的类型
    -->
    <typeAliases>
        <!--
            type：设置需要起别名的类型
            alis：设置某个类型的别名
        -->
        <!--<typeAlias type="com.kaede.mybatis.pojo.User" alias="User"></typeAlias>-->
        <!--若未设置alis起别名，则默认别名为类名User且不区分大小写-->
        <!--<typeAlias type="com.kaede.mybatis.pojo.User"></typeAlias>-->
        <!--通过包来设置类型别名，指定包下所有的类型将全部拥有默认的别名，即类名且不区分大小写-->
        <package name="com.kaede.mybatis.pojo"/>
    </typeAliases>

    <!--设置连接数据库的环境-->
    <!--
        enviroments：配置连接数据库的环境
        属性：default：设置默认使用的环境的id
    -->
    <environments default="development">
        <!--
            enviroment：设置一个具体的连接数据库的环境
            属性；id：设置环境的唯一标识，不能重复
        -->
        <environment id="development">
            <!--
                transactionManager：设置事务管理器
                属性：type：设置事务管理的方式
                     type="JDBC"/"MANAGED"
                     JDBC：表示使用JDBC中原生的事务管理方式，如手动开始或关闭自动提交，手动提交或回滚事务等
                     MANAGED：被管理，例如Spring
            -->
            <transactionManager type="JDBC"/>
            <!--
                dataSource：设置数据源
                属性：type：设置数据源的类型
                     type="POOLED"/"UNPOOLED"/"JNDI"
                     POOLED：表示使用数据库连接池
                     UNPOOLED：表示不使用数据库连接池
                     JNDI：表示使用上下文中的数据源
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>

        <environment id="test">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 引入mybatis的映射文件 -->
    <mappers>
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--
            以包的方式引入映射文件，但是必须满足两个条件：
            1、mapper接口和映射文件所在的包（目录）必须一致
            2、mapper接口的名字和映射文件的名字（目录）必须一致
            ps：目录与目录之间不能用. 要用/ ，如在resources下建立com/kaede/mybatis/mapper
            因为main中的java和resources目录加载之后在同一目录下，可在target目录看，故mapper接口和映射文件所在包一致
        -->
        <package name="com.kaede.mybatis.mapper"/>
    </mappers>
</configuration>
