<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--
        配置SpringMVC的前端控制器DispatcherServlet
        SpringMVC的配置文件默认的位置和名称：
            位置：WEB-INF下
            名称：<servlet-name></servlet-name>的值，加上-servlet.xml，
                 当前配置下的配置文件名为SpringMVC-servlet.xml
    -->
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--设置SpringMVC配置文件的位置和名称-->
        <init-param>
            <!--contextConfigLocation设置DispacherServlet要加载的SpringMVC的配置文件的路径-->
            <param-name>contextConfigLocation</param-name>
            <!--classpath:设置为类路径下，java和resources都是类路径-->
            <!--classpath:要是不写，指的还是WEB-INF下-->
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--Servlet的初始化默认在第一次访问时执行，</load-on-startup>将当前Servlet初始化时间提前到服务器启动时-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <!--
            /匹配的是浏览器向服务器发送的所有请求，但不能匹配以.jsp结尾的请求，.jsp结尾的请求会被
            tomcat里所设置的JspServlet来处理，/*可以匹配任意请求(包括.jsp结尾的请求)，DispacherServlet
            无法处理.jsp结尾的，请求故用/
        -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>