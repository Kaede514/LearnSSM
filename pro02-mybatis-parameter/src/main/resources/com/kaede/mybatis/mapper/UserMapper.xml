<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kaede.mybatis.mapper.UserMapper">
    <!--User getUserByUsername(String username);-->
    <select id="getUserByUsername" resultType="User">
        <!--
            MyBatis获取参数值的两种方式：${}和#{}
            ${}的本质就是字符串拼接，#{}的本质就是占位符赋值
            #{}: 解析为SQL时，会将形参变量的值取出，并自动给其添加引号
                 如SELECT * FROM user WHERE username="Amy"
            ${}: 解析为SQL时，将形参变量的值直接取出，直接拼接显示在SQL中
                 如SELECT * FROM user WHERE username=Amy
                 显而该SQL无法正常执行，故需要在mppaer映射文件中的${value}前后手动添加引号
        -->
        select * from t_user where username = #{username}
    </select>

    <!--User checkLogin(String username, String password);-->
    <select id="checkLogin" resultType="User">
        <!-- select * from t_user where username = #{arg0} and password = #{arg1} -->
        select * from t_user where username = #{param1} and password = #{param2}
    </select>

    <!--User checkLoginByMap(Map<String,Object> map);-->
    <select id="checkLoginByMap" resultType="User">
        select * from t_user where username = #{username} and password = #{password}
    </select>

    <!--void insertUser(User user);-->
    <insert id="insertUser">
        insert into t_user values (null,#{username},#{password},#{age},#{gender},#{email})
    </insert>

    <!--User checkLoginByParam(@Param("username") String username, @Param("password") String password);-->
    <select id="checkLoginByParam" resultType="User">
        select * from t_user where username = #{username} and password = #{password}
    </select>
</mapper>